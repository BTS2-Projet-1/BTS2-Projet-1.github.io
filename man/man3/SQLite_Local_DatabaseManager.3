.TH "SQLite_Local_DatabaseManager" 3 "Vendredi 8 Mai 2015" "Version 1.2.2" "Locker_Control" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SQLite_Local_DatabaseManager \- classe \fBSQLite_Local_DatabaseManager\fP, gestion de des actions et interractions entre l'interface de maintenance de la base de données et la classe \fBCSQLite_Local_DB\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <sqlite_local_databasemanager\&.h>\fP
.PP
Est dérivée de QWidget\&.
.SS "Connecteurs publics"

.in +1c
.ti -1c
.RI "void \fBReturnHome\fP ()"
.br
.ti -1c
.RI "void \fBReturnMaintenanceMenu\fP ()"
.br
.ti -1c
.RI "void \fBReturnDB_Manager\fP ()"
.br
.ti -1c
.RI "void \fBUpdate_Confirm\fP ()"
.br
.ti -1c
.RI "void \fBBuild_EmptyDB\fP ()"
.br
.ti -1c
.RI "void \fBBuild_DefaultDB\fP ()"
.br
.ti -1c
.RI "void \fBBuild_LastSaveDB\fP ()"
.br
.ti -1c
.RI "void \fBSaveDB\fP ()"
.br
.ti -1c
.RI "void \fBSetStatusLoading\fP (QString Message, int Value)"
.br
.ti -1c
.RI "void \fBRun_DB_Manager\fP ()"
.br
.in -1c
.SS "Signaux"

.in +1c
.ti -1c
.RI "void \fBstartThreadManager\fP (int Opt)"
.br
.ti -1c
.RI "void \fBstartThreadAutoSave\fP ()"
.br
.ti -1c
.RI "void \fBEndThread_DatabaseManager\fP (bool Value)"
.br
.in -1c
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBSQLite_Local_DatabaseManager\fP (\fBConsoleWindows\fP *TConsoleWindows=NULL, \fBCSQLite_Local_DB\fP *BD=NULL)"
.br
.ti -1c
.RI "void \fBSetShowWidgets\fP (\fBShowWidgets\fP *TShowWidgets)"
.br
.ti -1c
.RI "\fB~SQLite_Local_DatabaseManager\fP ()"
.br
.in -1c
.SH "Description détaillée"
.PP 
classe \fBSQLite_Local_DatabaseManager\fP, gestion de des actions et interractions entre l'interface de maintenance de la base de données et la classe \fBCSQLite_Local_DB\fP\&. 


.PP
\fBAuteur:\fP
.RS 4
HOUDAYER Pierre
.RE
.PP
\fBVersion:\fP
.RS 4
1\&.2
.RE
.PP
\fBDate:\fP
.RS 4
8 mai 2015 
.RE
.PP

.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "SQLite_Local_DatabaseManager::SQLite_Local_DatabaseManager (\fBConsoleWindows\fP * TConsoleWindows = \fCNULL\fP, \fBCSQLite_Local_DB\fP * BD = \fCNULL\fP)\fC [explicit]\fP"

.SS "SQLite_Local_DatabaseManager::~SQLite_Local_DatabaseManager ()"

.SH "Documentation des fonctions membres"
.PP 
.SS "void SQLite_Local_DatabaseManager::Build_DefaultDB ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::Build_EmptyDB ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::Build_LastSaveDB ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::EndThread_DatabaseManager (bool Value)\fC [signal]\fP"

.SS "void SQLite_Local_DatabaseManager::ReturnDB_Manager ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::ReturnHome ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::ReturnMaintenanceMenu ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::Run_DB_Manager ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::SaveDB ()\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::SetShowWidgets (\fBShowWidgets\fP * TShowWidgets)\fC [inline]\fP"

.SS "void SQLite_Local_DatabaseManager::SetStatusLoading (QString Message, int Value)\fC [slot]\fP"

.SS "void SQLite_Local_DatabaseManager::startThreadAutoSave ()\fC [signal]\fP"

.SS "void SQLite_Local_DatabaseManager::startThreadManager (int Opt)\fC [signal]\fP"

.SS "void SQLite_Local_DatabaseManager::Update_Confirm ()\fC [slot]\fP"


.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Locker_Control à partir du code source\&.
